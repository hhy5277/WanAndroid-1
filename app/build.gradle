apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'bugly'

android {

    compileSdkVersion  rootProject.ext.android.compileSdkVersion

    bugly {
        appId = 'a0768ddf34' // 注册时分配的App ID
        appKey = '9d2b9c08-11b7-45d2-b4b4-89753d6df453' // 注册时分配的App Key
    }

    defaultConfig {
        applicationId "com.example.hy.wanandroid"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86' // 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs{
        config{
            storeFile file(KEYPATH)
            storePassword KEYPASS
            keyAlias ALIASNAME
            keyPassword ALIASPASS
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        debug{
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //为项目指定资源目录
    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':commonlib')

    //androidx
    implementation rootProject.ext.dependencies["libraryCompat"]
    implementation rootProject.ext.dependencies["constraintLayout"]
    implementation rootProject.ext.dependencies["marterialDesign"]

    //db
    implementation rootProject.ext.dependencies["litepal"]

    //network
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofitGsonConvert"]
    implementation rootProject.ext.dependencies["retrofitRxjava2Adapter"]

    //rxjava2
    implementation rootProject.ext.dependencies["rxJava2"]
    implementation rootProject.ext.dependencies["rxAndroid"]

    //ui
    implementation rootProject.ext.dependencies["baseAdapter"]
    implementation rootProject.ext.dependencies["smartrefresh"]
    implementation rootProject.ext.dependencies["smartrefreshHeader"]
    implementation rootProject.ext.dependencies["agentWeb"]
    implementation rootProject.ext.dependencies["gilde"]
    annotationProcessor rootProject.ext.dependencies["gildeCpmplier"]
    implementation rootProject.ext.dependencies["flowLayout"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["circleImage"]
    implementation rootProject.ext.dependencies["verticalTablayout"]
    implementation rootProject.ext.dependencies["waveLoading"]
    implementation rootProject.ext.dependencies["rxRelay"]
    implementation rootProject.ext.dependencies["twinklingRefreshLayout"]
    implementation rootProject.ext.dependencies["multiWaveHeader"]

    //dagger
    implementation rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2Cpmplier"]
    implementation rootProject.ext.dependencies["bufferKinfe"]
    annotationProcessor rootProject.ext.dependencies["bufferKinfeCompiler"]

    //bugly
    //noinspection GradleDependency
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //noinspection GradleDependency
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    //leakcanary
    debugImplementation rootProject.ext.dependencies["leakCanaryDebug"]
    releaseImplementation rootProject.ext.dependencies["leakCanaryRelease"]
    debugImplementation rootProject.ext.dependencies["leakCanaryDebugSupport"]

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]
}
